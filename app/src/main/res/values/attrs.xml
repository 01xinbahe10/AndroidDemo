<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!--PulltoRefresh   start-->

    <declare-styleable name="PullToRefresh">
        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />
        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <!--PulltoRefresh   end-->

    <!--GridLayout Start >>>>>>>>>>>>>>>>>>>>>>>>>-->

    <attr name="childLengthBasedOn"><!--新增-->
        <enum name="height" value="0"/>
        <enum name="width" value="1"/>
    </attr>
    <attr name="childLengthBasedIncr" format="dimension"/><!--新增-->
    <attr name="childLengthBasedMultiple" format="float"/><!--新增-->
    <declare-styleable name="GridLayout">
        <attr name="orientation">
            <enum name="horizontal" value="0" />
            <enum name="vertical" value="1" />
        </attr>
        <attr name="rowCount" format="integer" />
        <attr name="columnCount" format="integer" />
        <attr name="useDefaultMargins" format="boolean" />
        <attr name="alignmentMode">
            <enum name="alignBounds" value="0" />
            <enum name="alignMargins" value="1" />
        </attr>
        <attr name="rowOrderPreserved" format="boolean" />
        <attr name="columnOrderPreserved" format="boolean" />

        <attr name="childLengthBasedOn"/>
        <attr name="childLengthBasedIncr"/>
        <attr name="childLengthBasedMultiple"/>
    </declare-styleable>
    <declare-styleable name="GridLayout_Layout">
        <attr name="android:layout_width" />
        <attr name="android:layout_height" />
        <attr name="android:layout_margin" />
        <attr name="android:layout_marginLeft" />
        <attr name="android:layout_marginTop" />
        <attr name="android:layout_marginRight" />
        <attr name="android:layout_marginBottom" />
        <attr name="layout_row" format="integer" />
        <attr name="layout_rowSpan" format="integer" min="1" />
        <attr name="layout_rowWeight" format="float" />
        <attr name="layout_column" format="integer" />
        <attr name="layout_columnSpan" format="integer" min="1" />
        <attr name="layout_columnWeight" format="float" />
        <attr name="layout_gravity">
            <flag name="top" value="0x30" />
            <flag name="bottom" value="0x50" />
            <flag name="left" value="0x03" />
            <flag name="right" value="0x05" />
            <flag name="center_vertical" value="0x10" />
            <flag name="fill_vertical" value="0x70" />
            <flag name="center_horizontal" value="0x01" />
            <flag name="fill_horizontal" value="0x07" />
            <flag name="center" value="0x11" />
            <flag name="fill" value="0x77" />
            <flag name="clip_vertical" value="0x80" />
            <flag name="clip_horizontal" value="0x08" />
            <flag name="start" value="0x00800003" />
            <flag name="end" value="0x00800005" />
        </attr>
    </declare-styleable>
    <!-- From: file:/usr/local/google/buildbot/repo_clients/https___googleplex-android.googlesource.com_a_platform_manifest.git/lmp-mr1-supportlib-release/frameworks/support/v7/gridlayout/res/values/dimens.xml -->
    <eat-comment />
    <dimen name="default_gap">8dip</dimen>
    <!--GridLayout End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-->


    <!--SquareConstraintLayout Start >>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <!--新增-->
    <declare-styleable name="SquareConstraintLayout">
        <attr name="childLengthBasedOn"/><!--新增-->
        <attr name="childLengthBasedIncr"/><!--新增-->
        <attr name="childLengthBasedMultiple"/><!--新增-->
    </declare-styleable>
    <!--SquareConstraintLayout End <<<<<<<<<<<<<<<<<<<<<<<<<<<<-->


    <!--图片裁剪属性>>>>>>>>>>>>>start-->
    <attr name="wide_ratio" format="integer"/>
    <attr name="high_ratio" format="integer"/>

    <declare-styleable name="CropImageView">
        <attr name="wide_ratio"/>
        <attr name="high_ratio"/>
    </declare-styleable>

    <declare-styleable name="MineSurfaceView">
        <attr name="src" format="reference|color"/>
        <attr name="wide_ratio"/>
        <attr name="high_ratio"/>
    </declare-styleable>
    <!--图片裁剪属性>>>>>>>>>>>>>end-->


    <declare-styleable name="RegLinkFocusView">
        <attr name="regIds" format="string"/>
    </declare-styleable>

</resources>